<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ycx.manager.dao.LoginUserDao">
	<resultMap type="com.ycx.manager.bean.LoginUser" id="LoginUserMap">
		<id property="id" column="id"></id>
		<result property="userId" column="user_id" />
		<result property="loginName" column="login_name" />
		<result property="name" column="name" />
		<result property="phone" column="phone" />
		<result property="email" column="email"></result>
		<result property="password" column="password" />
		<result property="sex" column="sex" />
		<result property="permission" column="permission" />
		<result property="roleId" column="role_id" />
		<result property="makeTime" column="make_time" />
		<result property="salt" column="salt" />
	</resultMap>

	<!-- 根据名字查出登录者基础信息 -->
	<select id="findUserByUsername" parameterType="String"
		resultMap="LoginUserMap">

		SELECT c.id as userId,c.login_name,c.name,c.phone,c.email,c.make_time,c.password as password from t_user c WHERE login_name = #{username}
	</select>
	
	<!-- 根据名字查出登录者基础信息 -->
	<select id="findReceptionUserByUsername" parameterType="String"
		resultMap="LoginUserMap">

		SELECT c.id as userId,c.login_name,c.name,c.phone,c.email,c.make_time,c.password as password from t_customer c WHERE login_name = #{username}
	</select>

	<!-- 根据名字查出登录者脚色信息 -->
	<select id="findRoleByName" parameterType="String" resultType="String">

		SELECT r.role_value FROM t_user u,t_user_role ur,t_role r
		where
		u.id=ur.t_user_id and
		ur.t_role_id = r.id and login_name = #{username}
	</select>


	<!-- 根据名字查出登录者权限信息 -->
	<select id="findPermissionByName" parameterType="String"
		resultType="String">
		SELECT DISTINCT p.permission
		FROM
		t_user u,
		t_user_role ur,
		t_role r,
		t_role_permission rp,
		t_permission p
		WHERE
		u.id = ur.t_user_id
		AND ur.t_role_id = r.id
		AND r.id = rp.t_role_id
		AND rp.t_permission_id = p.id and login_name = #{username}
	</select>


	<!-- 根据名字查出登录者权限信息 -->
	<select id="queryList" parameterType="com.ycx.manager.Dto.LoginUserDto"
		resultMap="LoginUserMap">
		SELECT
		u.id as userId,u.login_name,u.name,u.phone,u.email,u.make_time,ur.t_role_id
		role_id
		FROM
		t_user u,
		t_user_role ur,
		t_role r
		where
		u.id = ur.t_user_id
		AND ur.t_role_id = r.id
		<include refid="searchCondition"></include>
		limit #{loginUserDto.start},#{loginUserDto.limit}
	</select>
	<!-- 根据名字查出登录者权限信息 -->
	<select id="countQueryList" parameterType="com.ycx.manager.Dto.LoginUserDto"
		resultType="int">
		SELECT
		count(*)
		FROM
		t_user u,
		t_user_role ur,
		t_role r
		where
		u.id = ur.t_user_id
		AND ur.t_role_id = r.id
		<include refid="searchCondition"></include>
	</select>


	<!-- 查询条件 -->
	<sql id="searchCondition">
		<if test="loginUserDto.loginName != null and loginUserDto.loginName!=''">
			and u.login_name like "%"#{loginUserDto.loginName}"%"
		</if>
		<if test="loginUserDto.roleId != null and loginUserDto.roleId!=''">
			and ur.t_role_id =#{loginUserDto.roleId}#
		</if>
		
	</sql>



	<!-- 根据名字查出登录者权限信息 -->
	<select id="getCustomerList" parameterType="com.ycx.manager.Dto.LoginUserDto"
		resultMap="LoginUserMap">
		SELECT
		c.id as userId,c.login_name,c.name,c.phone,c.email,c.make_time
		FROM
		t_customer c
		<include refid="searchCustomerCondition"></include>
		limit #{loginUserDto.start},#{loginUserDto.limit}
	</select>
	<!-- 根据名字查出登录者权限信息 -->
	<select id="countGetCustomerList" parameterType="com.ycx.manager.Dto.LoginUserDto"
		resultType="int">
		SELECT
		count(*)
		FROM
		t_customer c
		 <include refid="searchCustomerCondition"></include>
	</select>
     
     <!-- 查询条件 -->
	<sql id="searchCustomerCondition">
	  <where>
		<if test="loginUserDto.loginName != null and loginUserDto.loginName!=''">
			 c.login_name like "%"#{loginUserDto.loginName}"%"
		</if>
		  </where>
	</sql>
	
	
	<update id="updateUser">
	   update t_user u set  
	   u.password = #{loginUserDto.password},
	    u.login_name = #{loginUserDto.loginName},
	     u.name = #{loginUserDto.name},
	      u.email = #{loginUserDto.email},
	      u.phone = #{loginUserDto.phone}
	      where u.id = #{loginUserDto.userId}
	
	
	
	
	</update>
	
</mapper> 